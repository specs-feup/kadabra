import kadabra.mutation.ArithmeticOperatorDeletionMutation;
import kadabra.mutation.ConditionalOperatorDeletionMutation;
import lara.mutation.IterativeMutator;
import weaver.Query;

aspectdef MutationsTest


	testArithmeticOperatorDeletionMutation();
	testConditionalOperatorDeletionMutation();


end


function testArithmeticOperatorDeletionMutation() {

	println("ArithmeticOperatorDeletion");
	
	var mutator = new IterativeMutator(new ArithmeticOperatorDeletionMutation());
	mutator.addJps(Query.search("method", "arithmeticOperatorDeletion").first().descendants);

	// Generate all mutations
	while(mutator.mutateSource()) {
		// Print
		println(mutator.getMutatedPoint().getAncestor('statement').srcCode);
	}
}


function testConditionalOperatorDeletionMutation() {

	println("ConditionalOperatorDeletionMutation");
	
	var mutator = new IterativeMutator(new ConditionalOperatorDeletionMutation());
	mutator.addJps(Query.search("method", "conditionalOperatorDeletion").first().descendants);

	// Generate all mutations
	while(mutator.mutateSource()) {
		// Print
		println(mutator.getMutatedPoint().srcCode);
	}
}