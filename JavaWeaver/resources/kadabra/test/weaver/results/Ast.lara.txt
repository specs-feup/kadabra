file (Ast.java)
  class (Ast)
    field (x)
      reference (int - Type)
      literal (0)
        reference (int - Type)
    field (a)
      reference (int - Type)
      literal (1)
        reference (int - Type)
    field (b)
      reference (int - Type)
    constructor (Ast(int))
      joinpoint (Spoon class: CtParameterImpl, content: int b)
        reference (int - Type)
      body
        call (super())
          reference (<init> - Executable)
            reference (Object - Type)
              reference (java.lang - Package)
            reference (Object - Type)
              reference (java.lang - Package)
        assignment (this.b = 2)
          reference (int - Type)
          var (this.b)
            expression (this)
              reference (Ast - Type)
                reference ( - Package)
              expression (Ast)
                reference (Ast - Type)
                  reference ( - Package)
            reference (b - Field)
              reference (Ast - Type)
                reference ( - Package)
              reference (int - Type)
          literal (2)
            reference (int - Type)
    method (foo)
      reference (int - Type)
      body
        localVariable (final int c = 3)
          reference (int - Type)
          literal (3)
            reference (int - Type)
        return (return c)
          var (c)
            reference (c - LocalVariable)
              reference (int - Type)
    method (setLocalVariable)
      reference (void - Type)
      body
        localVariable (int a = 10)
          reference (int - Type)
          literal (10)
            reference (int - Type)
    method (setAssignment)
      reference (void - Type)
      body
        localVariable (int a = 10)
          reference (int - Type)
          literal (10)
            reference (int - Type)
        localVariable (int b = 20)
          reference (int - Type)
          literal (20)
            reference (int - Type)
        assignment (b = a + b)
          reference (int - Type)
          var (b)
            reference (b - LocalVariable)
              reference (int - Type)
          binaryExpression (a + b)
            reference (int - Type)
            var (a)
              reference (a - LocalVariable)
                reference (int - Type)
            var (b)
              reference (b - LocalVariable)
                reference (int - Type)
    method (fluent)
      reference (Ast - Type)
        reference ( - Package)
      body
        return (return this)
          expression (this)
            reference (Ast - Type)
              reference ( - Package)
            expression (Ast)
              reference (Ast - Type)
                reference ( - Package)
    method (call)
      reference (void - Type)
      body
        localVariable (Ast ast = new Ast(10).fluent())
          reference (Ast - Type)
            reference ( - Package)
          call (new Ast(10).fluent())
            expression (new Ast(10))
              reference (<init> - Executable)
                reference (Ast - Type)
                  reference ( - Package)
                reference (Ast - Type)
                  reference ( - Package)
                reference (int - Type)
              literal (10)
                reference (int - Type)
            reference (fluent - Executable)
              reference (Ast - Type)
                reference ( - Package)
              reference (Ast - Type)
                reference ( - Package)
        call (ast.fluent().foo())
          call (ast.fluent())
            var (ast)
              reference (ast - LocalVariable)
                reference (Ast - Type)
                  reference ( - Package)
            reference (fluent - Executable)
              reference (Ast - Type)
                reference ( - Package)
              reference (Ast - Type)
                reference ( - Package)
          reference (foo - Executable)
            reference (Ast - Type)
              reference ( - Package)
            reference (int - Type)

Modifiers: FINAL,PUBLIC,STATIC
Is final: true
Is static: true
Has public: true
Has private: false
Local var init: 10
New local var init: 20
Local var init after removing: int a
Assignment: b = a + b
Assignment lhs: b
Assignment rhs: a + b
Assignment after set: b = 30
sub call: undefined
sub call: undefined
sub call: ast.fluent().foo()
Var: this.b
Var is final: true
Var decl: private final int b;
Var decl is final: true
Var num: 2
Var child 1: this
Var child 2: b
Var chain length: 2