- Let Spoon do as much work as possible, we collect the data into the AST
- Avoid having AST nodes in fields, they should either be fetched by navigating the tree, or Type instances should "wrap" around such decls (they replace CtReferenceType)

- Set of classes for representing types (i.e., a Type hierarchy), it helped in Clang/Clava
 -> Do away with CtReference, have instead a Type
 -> DeclType: Optional<Decl> .getDecl(), List<String> .getQualifiedName(), String .getSimpleName()
 -> Declaration is truth: DeclType receives a Decl, and retrieves information from the Decl. If the Decl changes, so does the type
 
---

Tasks:

- Decl: Replace all fields that return a Decl with either a DeclType (todo) or a method that navigates the AST
