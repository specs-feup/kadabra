import weaver.jp.LoopJp;
import weaver.Weaver;

_lara_dummy_ = Object.defineProperty(LoopJp.prototype, '_type', {
	get: function () {		
		var typeLoop = this.astNode.getClass().getSimpleName();
		typeLoop = typeLoop.slice(2);
		return typeLoop;
	}
});

// TODO: this should be implement in common jps: Do, For, ForEach, While
_lara_dummy_ = Object.defineProperty(LoopJp.prototype, 'condition', {
	get: function () {
		var conditionExpr;
		switch (this._type) {
		  case "Do":
		    conditionExpr = this.astNode.getLoopingExpression();
		    break;
		  case "For":
		    conditionExpr = this.astNode.getExpression();
		    break;
		  case "ForEach":
		    conditionExpr = this.astNode.getExpression();
		    break;
		  case "While":
		    conditionExpr = this.astNode.getLoopingExpression();
		    break;
		}
		
		return CommonJoinPoints.toJoinPoint(conditionExpr);
	}
});

_lara_dummy_ = Object.defineProperty(LoopJp.prototype, 'hasCondition', {
	get: function () {	
		return true;
	}
});

