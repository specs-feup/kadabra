import weaver.jp.MethodJp;
import weaver.Weaver;

_lara_dummy_ = Object.defineProperty(MethodJp.prototype, 'class', {
	get: function () {
		return CommonJoinPoints.toJoinPoint(this.astNode.getDeclaringType());
	}
});

_lara_dummy_ = Object.defineProperty(MethodJp.prototype, 'signature', {
	get: function () {  
		return this.class.name + "::" + this.astNode.signature; 
	}
});

_lara_dummy_ = Object.defineProperty(MethodJp.prototype, 'isCustom', {
	get: function () {		
		return !this.astNode.isShadow(); 
	}
});

_lara_dummy_ = Object.defineProperty(MethodJp.prototype, 'params', {
	get: function () {
		var params = [];
		for (var param of Weaver.AST_METHODS.toJavaJoinPoint(this.astNode).params) {
			params.push(CommonJoinPoints.toJoinPoint(param.node));
		}
		return params;// CommonJoinPoints.toJoinPoint(this.astNode.params);
	}
});