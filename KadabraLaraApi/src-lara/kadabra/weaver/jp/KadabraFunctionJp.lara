import weaver.jp.FunctionJp;
import weaver.Weaver;

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'id', {
	get: function () {
		return this.signature; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'name', {
	get: function () {  
		return Weaver.AST_METHODS.toJavaJoinPoint(this.astNode).name; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'signature', {
	get: function () {  
		return this.astNode.signature; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'returnType', {
	get: function () {  	
		return CommonJoinPoints.toJoinPoint(this.astNode.getType()); 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'hasBody', {
	get: function () {  	
		return this.astNode.getBody()!==null; 
	}
});

_lara_dummy_ = Object.defineProperty(FunctionJp.prototype, 'stmts', {
	get: function () {
		if(this.hasBody){
			var functionBody = this.astNode.getBody();
			var functionStmts = functionBody.getStatements();
			return CommonJoinPoints.toJoinPoints(Weaver.toJs(functionStmts));
		}
		return []; 
	}
});