import weaver.JoinPointsBase;
import lara.Check;

JoinPoints.prototype.descendants = function($jp, jpType) {
	if($jp === undefined) {
		return [];
	}
	
	var descendants = $jp.descendants;
	if(jpType === undefined) {
		return descendants;
	}	
	
	Check.isJoinPoint($jp);

	return this._filterNodes(descendants, jpType);
}

JoinPoints.prototype._filterNodes = function($jps, jpType) {

	var filteredJps = [];
	
	for(var $jp of $jps) {
	
		if(!$jp.instanceOf(jpType)) {
			continue;
		}

		filteredJps.push($jp);
	}
	
	return filteredJps;

}


JoinPoints.prototype.children = function($jp, jpType) {
	if($jp === undefined) {
		return [];
	}
	
	Check.isJoinPoint($jp);
	
	var children = $jp.children;
	if(jpType === undefined) {
		return children;
	}
	
	//return $jp.astChildren;
	return this._filterNodes(children, jpType);
}





